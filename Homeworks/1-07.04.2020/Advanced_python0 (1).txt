1. Տրված list-ից ջնջել տրված արժեքի բոլոր համընկնումները:
Իրականացնել հետևյալ մեթոդներով՝
ա. remove method
բ. list comprehension

[1, 2, 3], 1 -> [2, 3]
[1, 2, 3, 1], 1 -> [2, 3]
[1, 2, 3], 0 -> [1, 2, 3]
[[1, 2], 2], 2 -> [[1, 2]]
[[1, 2], [1, 2, 3], [1, 2]], [1,2] -> [[1,2,3]]
[], 0 -> []

 
2. Ջնջել list-i բոլոր կրկնվող էլեմենտները
Օգտագործել հետևյալ մեթոդները՝
ա. for loop
բ. list comprehension (1 line) ` առանց այլ տիպի փոխակերպման
գ. Հնարավորինս քիչ սիմվոլ պարունակող լուծում (competition)
[1,2,3] -> [1,2,3]
[1,2,3,1] -> [1,2,3]
[[1,2], [1,2], [1,2,3]] -> [[1,2], [1,2,3]]
[[],[]] -> [[]]

 
3. Ստուգել արդյոք տրված string-ը սիմմետրիկ է թե ոչ:
ա. for loop
բ. մեկ տողով

'abc' -> False
'aba' -> True
'a' -> True
'' -> True

 
4. Հաշվել տրված թվի թվանշանների գումարը 
ա. for loop
բ. Հնարավորինս քիչ սիմվոլ պարունակող լուծում (competition)
123 -> 6
1005 -> 6
0 -> 0

5. Հաշվել տրված թվի թվանշանների գումարը երկուական ներկայացման մեջ
16 -> 1
17 -> 2
18 -> 2
264 -> 3

6. Հաշվել տրված թվերի ամենամեծ ընդհանուր բաժանարարը՝ օգտագործելով ռեկուռսիա
10, 15 -> 5
4, 7 -> 1
64, 32 -> 32

 
7. Գրել ծրագիր, որը կհաշվի, թե տրված string-ում յուրաքանչյուր բառը քանի անգամ է հանդիպել, և դրա հիման վրա կստեղծի dictionary
'What is this book about? This book is about python coding' -> {'this':2, 'is':2, 'book':2, 'about':2, 'what':1, 'coding'}
'even even even this is is sentence....' -> {'even':3, 'is':2, 'this':1, 'sentence':1}

 
8. Տրված է լիստ, որում ներառված են 1-ից մինչև n բոլոր բնական թվերը՝ բացառությամբ մեկի: Գտնել որ էլեմենտն է բացակայում:
[1,2,4] -> 3
[1,2,3] -> 4
[6,1,2,5,4] -> 3
[1] -> 2
[] -> 1
