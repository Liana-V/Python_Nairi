1.	Գրել ֆունկցիա, որն ընդունում է string և շրջում է (reverse) միայն ձայնավորները. 

‘abc’ -> ‘abc’
‘aec’ –> ‘eac’
‘america’ -> ‘amireca’

2.	Տրված է string list, պետք է գտնել ընհանուր սիմվոլիների քանակը դրա էլեմենտներում
Ա. Հաշվի առնելով նույն սիմվոլը մի քանի անգամ
Բ. Հաշվի չառնելով նույն սիմվոլը մի քանի անգամ

[‘abc’, ‘abd’, ‘abe’] -> 2
[‘a’, ‘b’, ‘c’] -> 0
[‘aaa’, ‘aab’, ‘aac’] -> 1 (եթե նույն սիմվոլը հաշվի չենք առնում մի քանի անգամ)
[‘aaa’, ‘aab’, ‘aac’] -> 2 (եթե նույն սիմվոլը հաշվի ենք առնում մի քանի անգամ)

3.	Տրված է integer list: Պետք է գտնել ձախից առաջին էլեմենտը, որում ոչ մի թվանշան չի կրկնվում: Այդպիսի էլեմենտի բացակայության դեպքում ծրագիրը պետք է վերադարձնի -1 արժեք:

[101, 110, 220, 100, 103, 606, 603] -> 103
[101, 110, 11, 111] -> -1

4.	Հաշվել տրված թվի ֆակտորիալը
ա. Օգտագործելով loop
բ. Օգտագործելով ռեկուրսիա

4 -> 24
5 -> 120

5.	Գտնել տրված թվից մեծ ամենափոքր թիմը, որը ինչ որ բնական թվի ֆակտորիալ է

10 -> 24
100 -> 120

6.	Տրված է երկու string: Առաջին string-ի էլեմենտները դասավորել ըստ երկրորդ string-ում դրանց հանդիպելու հերթականության:

‘abc’, ‘befca’ -> ‘bca’
‘abaabbccabbed’, ‘bedac’ -> ‘bbbbbedaaaacc’

7.	Տրված է երկու list: Ստուգել արդյոք դրանք շրջանաձև դասավորման դեպքում միմյանց համապատասխանում են, թե ոչ:

[1, 2, 3], [2, 3, 1] -> True
[1, 3, 4, 5, 2], [5, 2, 1, 3, 4] -> True
[1, 2, 3], [3, 2, 1] -> False

8.	Գրել ֆունկցիա, որը կվերադարձնի տրված list-ի երկրորդ ամենամեծ արժեքը (եթե գոյություն ունի), հակառակ դեպքում վերադարձնել 0.5:

[1, 5, 6, 4, 2] -> 5
[1, 5, 5] -> 1
[5, 5, 5] -> 0.5
